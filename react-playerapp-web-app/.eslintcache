[{"C:\\Users\\HP PC\\Desktop\\Tollgate 2\\reat-tollgate-playerapp-boilerplate\\src\\index.js":"1","C:\\Users\\HP PC\\Desktop\\Tollgate 2\\reat-tollgate-playerapp-boilerplate\\src\\App.jsx":"2","C:\\Users\\HP PC\\Desktop\\Tollgate 2\\reat-tollgate-playerapp-boilerplate\\src\\reportWebVitals.js":"3","C:\\Users\\HP PC\\Desktop\\Tollgate 2\\reat-tollgate-playerapp-boilerplate\\src\\data\\PlayerContext.js":"4","C:\\Users\\HP PC\\Desktop\\Tollgate 2\\reat-tollgate-playerapp-boilerplate\\src\\components\\ShowPlayer.jsx":"5","C:\\Users\\HP PC\\Desktop\\Tollgate 2\\reat-tollgate-playerapp-boilerplate\\src\\components\\AddPlayer.jsx":"6","C:\\Users\\HP PC\\Desktop\\Tollgate 2\\reat-tollgate-playerapp-boilerplate\\src\\components\\Header.jsx":"7"},{"size":633,"mtime":1650466556661,"results":"8","hashOfConfig":"9"},{"size":851,"mtime":1650473063300,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1650461341878,"results":"11","hashOfConfig":"9"},{"size":591,"mtime":1650466601948,"results":"12","hashOfConfig":"9"},{"size":1135,"mtime":1650472703143,"results":"13","hashOfConfig":"9"},{"size":2450,"mtime":1650473685697,"results":"14","hashOfConfig":"9"},{"size":514,"mtime":1650463665244,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1d6qkk4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\HP PC\\Desktop\\Tollgate 2\\reat-tollgate-playerapp-boilerplate\\src\\index.js",[],["35","36"],"C:\\Users\\HP PC\\Desktop\\Tollgate 2\\reat-tollgate-playerapp-boilerplate\\src\\App.jsx",["37"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport AddPlayer from './components/AddPlayer';\r\n// import { useState, createContext, useContext } from \"react\";\r\n// import { PlayerContext } from './data/PlayerContext';\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n } from 'react-router-dom';\r\nimport ShowPlayer from './components/ShowPlayer';\r\nfunction App() {\r\n  // const user = useContext(PlayerContext);\r\n  // console.log(user);\r\n  return (\r\n    <div className=\"App\">\r\n     {/* <Header/> */}\r\n      <BrowserRouter>\r\n      <Routes>\r\n       <Route path=\"/\" element={<Header/>} />\r\n       <Route path=\"/addplayer\" element={<AddPlayer/>} />\r\n      <Route path=\"/showplayer\" element={<ShowPlayer/> } />\r\n      </Routes>\r\n        \r\n       </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\HP PC\\Desktop\\Tollgate 2\\reat-tollgate-playerapp-boilerplate\\src\\reportWebVitals.js",[],"C:\\Users\\HP PC\\Desktop\\Tollgate 2\\reat-tollgate-playerapp-boilerplate\\src\\data\\PlayerContext.js",["38"],"import React,{useState,createContext,useEffect} from 'react' \r\nimport axios from 'axios';\r\nexport const PlayerContext=createContext();\r\nexport const PlayerProvider=(props) =>{\r\n     \r\n    // declare the player hook here\r\n    const [players , setPlayers] = useState([]);\r\n     \r\n        useEffect(()=>{\r\n            // initialise player array using axios get method from json file\r\n            // using json server api\r\n        });\r\n    \r\n    return (\r\n        <PlayerContext.Provider value={[players,setPlayers]}>\r\n            { props.children}\r\n        </PlayerContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\HP PC\\Desktop\\Tollgate 2\\reat-tollgate-playerapp-boilerplate\\src\\components\\ShowPlayer.jsx",["39","40"],"import React, { useContext, useEffect, useState } from 'react'\r\n// import {PlayerContext} from '../data/PlayerContext';\r\nimport axios from 'axios';\r\nexport default function ShowPlayer() {\r\n  // initialise the player info using useContext hook\r\n  // const user = useContext(PlayerContext);\r\n  // console.log(\"user2\" , user)\r\n  // useEffect(async ()=>{\r\n  const [data, setData] = useState([]);\r\n  useEffect(async () => {\r\n    const res = await axios.get('http://localhost:3000/players');\r\n    setData(res.data);\r\n\r\n  }, [])\r\n\r\n\r\n\r\n  // })\r\n  return (\r\n    <div class=\"data-table\">\r\n      <table>\r\n        <tr>\r\n          <th>\r\n            Player Name\r\n          </th>\r\n\r\n          <th>\r\n            Country\r\n          </th>\r\n          <th>\r\n            Matches Played\r\n          </th>\r\n        </tr>\r\n\r\n\r\n\r\n        {\r\n          data && data.map((item, err) => {\r\n            return (<>\r\n              <tr>\r\n                <td>{item.name}</td>\r\n                <td>{item.country}</td>\r\n                <td>{item.matchesPlayed}</td>\r\n              </tr>\r\n\r\n            </>)\r\n          })\r\n        }\r\n\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\HP PC\\Desktop\\Tollgate 2\\reat-tollgate-playerapp-boilerplate\\src\\components\\AddPlayer.jsx",["41"],"import React, { Component } from 'react'\r\nimport {PlayerContext} from '../data/PlayerContext';\r\nimport axios from 'axios';\r\n//import ShowPlayer from './ShowPlayer';\r\n// import Player from '../../Players.json'\r\nexport default class AddPlayer extends Component {\r\n      //  declare state with required properties\r\n      constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pName:\"\",\r\n            pCountry:\"\",\r\n            matchPlayed:\"\"\r\n        }\r\n      }\r\n      static contextType = PlayerContext\r\n     submitHandler = async (e)=>{\r\n      e.preventDefault();\r\n      const user = this.context\r\n      let data = {\r\n        name:this.state.pName,\r\n        country:this.state.pCountry,\r\n        matchesPlayed:this.state.matchPlayed\r\n      }\r\n      const res = await axios.post('http://localhost:3000/players', data);\r\n      console.log(res);\r\n\r\n      // user[0].push(data);\r\n      // console.log(\"user1\" , user)\r\n      // return <ShowPlayer user={user[0]}/>\r\n      window.location.href = \"/showplayer\"\r\n      // this.props.history.push(\"/showplayer\")\r\n      }\r\n    //  submitHandler(e){\r\n      \r\n    \r\n    //   // declare and initialise players ,setPlayers from context \r\n    //   // use axios.post to send new player data to json api\r\n    //   // and store the same to context also using setPlayer \r\n\r\n    //   // reset the text fields and show acknowledgement\r\n      \r\n    // }\r\n    render() {\r\n\r\n        return (\r\n          <div>\r\n             {/* display form to accept name,country and matchesPlayed  of a player */}\r\n             <form onSubmit={this.submitHandler}>\r\n               <div className='add'>\r\n               <div>\r\n            <input type=\"text\" placeholder='playername' value={this.state.pName}  onChange={(e) => this.setState({pName:e.target.value})}/>\r\n            </div>\r\n            <div>\r\n\r\n           \r\n            <input type=\"text\" placeholder='Country' value={this.state.pCountry} onChange={(e) => this.setState({pCountry:e.target.value})} />\r\n            </div>\r\n\r\n            <div>\r\n            <input type=\"text\" placeholder='matchPlayed' value={this.state.matchPlayed} onChange={(e) => this.setState({matchPlayed:e.target.value})} />\r\n            </div>\r\n            <div className='sub'>\r\n            <button>Submit</button>\r\n            </div>\r\n            \r\n            \r\n            </div>\r\n             </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nAddPlayer.contextType=PlayerContext;\r\n","C:\\Users\\HP PC\\Desktop\\Tollgate 2\\reat-tollgate-playerapp-boilerplate\\src\\components\\Header.jsx",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":13},{"ruleId":"46","severity":1,"message":"51","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":27},{"ruleId":"52","severity":1,"message":"53","line":10,"column":13,"nodeType":"54","endLine":14,"endColumn":4},{"ruleId":"46","severity":1,"message":"55","line":19,"column":13,"nodeType":"48","messageId":"49","endLine":19,"endColumn":17},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'useContext' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]